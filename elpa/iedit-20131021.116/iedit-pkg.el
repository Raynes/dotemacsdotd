(define-package "iedit" "20131021.116" "Edit multiple regions in the same way simultaneously." 'nil ";;; Commentary:\n\n;; This package is an Emacs minor mode and allows you to edit one occurrence of\n;; some text in a buffer (possibly narrowed) or region, and simultaneously have\n;; other occurrences edited in the same way.\n;;\n;; Normal scenario of iedit-mode is like:\n;;\n;; - Highlight certain contents - by press C-; (The default binding)\n;;   All occurrences of a symbol, string in the buffer or a region may be\n;;   highlighted corresponding to current mark, point and prefix argument.\n;;   Refer to the document of `iedit-mode' for details.\n;;\n;; - Edit one of the occurrences\n;;   The change is applied to other occurrences simultaneously.\n;;\n;; - Finish - by pressing C-; again\n;;\n;; You can also use Iedit mode as a quick way to temporarily show only the\n;; buffer lines that match the current text being edited.  This gives you the\n;; effect of a temporary `keep-lines' or `occur'.  To get this effect, hit C-'\n;; when in Iedit mode - it toggles hiding non-matching lines.\n;;\n;; Renaming refactoring is convenient in Iedit mode\n;;\n;; - The symbol under point is selected as occurrence by default and only\n;;   complete symbols are matched\n;; - With digit prefix argument 0, only symbols in current function are matched\n;; - Restricting symbols in current region can be done by pressing C-; again\n;; - Last renaming refactoring is remembered and can be applied to other buffers\n;;   later\n;;\n;; There are also some other facilities you may never think about.  Refer to the\n;; document of function `iedit-mode' (C-h f iedit-mode RET) for more details.\n\n;; The code was developed and fully tested on Gnu Emacs 24.0.93, partially\n;; tested on Gnu Emacs 22. If you have any compatible problem, please let me\n;; know.\n\n")
